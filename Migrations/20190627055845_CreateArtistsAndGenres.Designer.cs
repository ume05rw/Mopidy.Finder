// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicFront.Models;

namespace MusicFront.Migrations
{
    [DbContext(typeof(Dbc))]
    [Migration("20190627055845_CreateArtistsAndGenres")]
    partial class CreateArtistsAndGenres
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("MusicFront.Models.Albums.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUri");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Uri")
                        .IsRequired();

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.ToTable("albums");
                });

            modelBuilder.Entity("MusicFront.Models.Artists.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Uri")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("artists");
                });

            modelBuilder.Entity("MusicFront.Models.Genres.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Uri")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("genres");
                });
#pragma warning restore 612, 618
        }
    }
}
